
\section{Anonymized DHT}

\sebsection{DHT Traffic Queue}

We create a DHT traffic queue system to provide a relatively constant
traffic profile.  It consists of a worker thread that wakes a random 
times obeying a Poisson-like distribution with a preferably short mean, 
like 1 minute, and possibly a shortish maximum, maybe 10 minutes.  

If Alice has no queued DHT requests, then her worker thread contacts a 
random DHT node to perform random operations with probability p_none.
If p_none < 1 then Alice's traffic profile is not strictly speaking
constant, but the network savings could be significant.

If Alice has queued operations, then her worker thread contacts a 
random DHT node to perform the first desiered operation.  

Alice's worker thread knows both the recent and upcoming DHT traffic
events, as well as a user configurable urgency setting given by
a measure of acceptable difference? from constant traffic.
Additional delays can be inserted to keep our projected difference? 
from constant traffic in line with the urgency setting.  

\subsection{Questions}

Should we unify the GET and PUT request into a single REPLACE request
so that DHT nodes do not recognize the operation?
Probably. 

Should we unify Bloomaphore traffic with GETs/PUTs/REPLACEs too?
Ideally yes, but (a) how?  And (b) Bloomaphore traffic might've better 
but strange protections.

Should we authenticate DHT GETs/PUTs/REPLACEs with a Curve25519 public key?
Yes.  It exposes no addiiotnal information if you derive the private key
from whatever hash you originally planned to derived the mailbox from and 
then derive the mailbox from the corresponding public key.

